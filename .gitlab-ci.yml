services:
  - docker:19-dind

variables:
  VARIABLE_DATA: Gitlab-CI-YAML
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_DRIVER: overlay2
  AGENT_NAME: pegasus

stages:
  - build
  - package
  - deploy

before_script:
  - export IMAGE=$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
  - export WEB_IMAGE=$IMAGE:web
  - echo $IMAGE:web
  - echo $CI_REGISTRY_USER
  - echo $CI_JOB_TOKEN
  - echo $CI_REGISTRY
  - echo WEB_IMAGE
  - echo $CI_REGISTRY_IMAGE
  - echo $DEPLOY_TOKEN

package:
  image: maven:3.8.4-jdk-8
  stage: build
  script:
    - mvn clean install -s settings.xml
  artifacts:
    paths:
      - modules/ams-api/target/*.jar
  only:
    - main

build:
  image:
    name: docker:18.09
    entrypoint: [""]
  services:
    - docker:18.09-dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  stage: package
  script:
    - ls
    - cd modules/ams-api
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') --build-arg GIT_FULL_BRANCH=$(git rev-parse --abbrev-ref HEAD) --build-arg SHORT_COMMIT_HASH=${CI_COMMIT_SHA:0:8} -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - main

deploy:
  image:
    name: dtzar/helm-kubectl
    entrypoint: [""]
  stage: deploy
  script:
    - kubectl config get-contexts
    - kubectl config use-context $CI_PROJECT_PATH:pegasus-ams
    - kubectl config set-context --current --namespace=default
    - kubectl get pods
    - kubectl config view --raw
    - cd charts/pegasus-ams-chart
    - helm upgrade --install pegasus-ams --namespace=default .
  only:
    - main